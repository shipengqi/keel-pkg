name: pack kubernetes.tar.gz

on:
  release:
    types: [created]
  workflow_dispatch:
    inputs:
      version:
        beta: true

jobs:
  pack:
    name: pack
    env:
      ALI_REGISTRY_USER: ${{ secrets.ALI_REGISTRY_USER }}
      ALI_REGISTRY_PASS: ${{ secrets.ALI_REGISTRY_PASS }}
      DOCKERHUB_USER: shipengqi
      DOCKERHUB_PASS: ${{ secrets.DOCKERHUB_PASS }}
      QINIU_ACCESS_KEY: ${{ secrets.QINIU_ACCESS_KEY }}
      QINIU_SECRET_KEY: ${{ secrets.QINIU_SECRET_KEY }}
      KUBERNETES_VERSION: 1.22.2
      ARCH: amd64
      BRTA: ${{ github.event.inputs.version.beta }}
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Inspect docker
        run: |
          echo "Name:      ${{ steps.buildx.outputs.name }}"
          echo "Endpoint:  ${{ steps.buildx.outputs.endpoint }}"
          echo "Status:    ${{ steps.buildx.outputs.status }}"
          echo "Flags:     ${{ steps.buildx.outputs.flags }}"
          echo "Platforms: ${{ steps.buildx.outputs.platforms }}"
      - name: Set up go
        uses: actions/setup-go@v2
        with:
          go-version: '^1.16' # The Go version to download (if necessary) and use.
      - name: Inspect go
        run: go version
      - name: pre pack
        run: |
          make build-pack
          /bin/bash .github/scripts/pre-sync.sh
      - name: pack
        id: pack
        continue-on-error: false
        run: |
          sudo \
          ${HOME}/pack/packer \
          -u ${ALI_REGISTRY_USER} \
          -p ${ALI_REGISTRY_PASS} \
          --version-config ${HOME}/pack/versions.json \
      - name: post pack success
        continue-on-error: false
        run: |
          echo "pack done!"
          /bin/bash .github/scripts/post-pack.sh
        if: steps.sync.outcome == 'success'
      - name: post pack failed
        run: |
          echo "pack failed!!!"
        if: steps.sync.outcome != 'success'

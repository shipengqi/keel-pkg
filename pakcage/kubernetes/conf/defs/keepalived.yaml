# create keel-keepalived service account
---
apiVersion: v1
kind: ServiceAccount
metadata:
  name: itom-keel-keepalived
  namespace: kube-system
---
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRole
metadata:
  name: itom-keel-keepalived-role
rules:
- apiGroups:
  - ""
  resources:
  - nodes
  - configmaps
  verbs:
  - get
  - list
---
# create rolebinding for keel-keepalived service account in core namespace
apiVersion: rbac.authorization.k8s.io/v1
kind: ClusterRoleBinding
metadata:
  name: itom-keel-keepalived:itom-keel-keepalived-role
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: ClusterRole
  name: itom-keel-keepalived-role
subjects:
- kind: ServiceAccount
  name: itom-keel-keepalived
  namespace: kube-system
---
# create KeepAlived Daemonset
apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: itom-keel-keepalived
  namespace: kube-system
  labels:
    tier: node
    app: itom-keel-keepalived
spec:
  selector:
    matchLabels:
      tier: node
      app: itom-keel-keepalived
  updateStrategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 1
  minReadySeconds: 30
  template:
    metadata:
      labels:
        tier: node
        app: itom-keel-keepalived
    spec:
      hostNetwork: true
      priorityClassName: system-cluster-critical
      nodeSelector:
        {FIRST_MASTER_NODE_SELECTOR}
      # Make sure keepalived will be scheduled to desired nodes with any NoSchedule taint
      tolerations:
      - operator: Exists
        effect: NoSchedule
      - key: "node-role.kubernetes.io/control-plane"
        operator: "Exists"
        effect: "NoSchedule"
      serviceAccountName: itom-keel-keepalived
      imagePullSecrets:
        - name: registrypullsecret
      containers:
      - name: keepalived
        image: {DOCKER_REPOSITORY}/{REGISTRY_ORGNAME}/{IMAGE_KEEPALIVED}
        resources:
          requests:
            cpu: "100m"
            memory: "100Mi"
          limits:
            cpu: "100m"
            memory: "100Mi"
        securityContext:
          privileged: false
          capabilities:
            add:
            - NET_ADMIN
        env:
        - name: K8S_APISERVER
          value: 127.0.0.1:{MASTER_API_SSL_PORT}
        - name: THIS_NODE_NAME
          valueFrom:
            fieldRef:
              fieldPath: spec.nodeName
        - name: THIS_POD_NAME
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        - name: THIS_POD_IP
          valueFrom:
            fieldRef:
              fieldPath: status.podIP
        # Do not edit below
        {AZURE_CONFIG_VOLUME}
